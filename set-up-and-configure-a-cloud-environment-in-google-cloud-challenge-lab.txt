# Prep
export REGION=us-east1
export ZONE=us-east1-b

# Task 1
gcloud compute networks create griffin-dev-vpc --subnet-mode=custom
gcloud compute networks subnets create griffin-dev-wp --network=griffin-dev-vpc --region=${REGION} --range=192.168.16.0/20
gcloud compute networks subnets create griffin-dev-mgmt --network=griffin-dev-vpc --region=${REGION} --range=192.168.32.0/20

# Task 2
gcloud compute networks create griffin-prod-vpc --subnet-mode=custom
gcloud compute networks subnets create griffin-prod-wp --network=griffin-prod-vpc --region=${REGION} --range=192.168.48.0/20
gcloud compute networks subnets create griffin-prod-mgmt --network=griffin-prod-vpc --region=${REGION} --range=192.168.64.0/20

# Task 3
gcloud compute instances create griffin-bastion --zone=${ZONE} --machine-type=n1-standard-1 --network-interface=network=griffin-dev-vpc,subnet=griffin-dev-mgmt --network-interface=network=griffin-prod-vpc,subnet=griffin-prod-mgmt
gcloud compute firewall-rules create griffin-dev-allow-icmp-ssh-rdp --direction=INGRESS --priority=1000 --network=griffin-dev-vpc --action=ALLOW --rules=icmp,tcp:22,tcp:3389 --source-ranges=0.0.0.0/0
gcloud compute firewall-rules create griffin-prod-allow-icmp-ssh-rdp --direction=INGRESS --priority=1000 --network=griffin-prod-vpc --action=ALLOW --rules=icmp,tcp:22,tcp:3389 --source-ranges=0.0.0.0/0

# Task 5
gcloud container clusters create griffin-dev --zone=${ZONE} --num-nodes=2 --machine-type=n1-standard-4 --network griffin-dev-vpc --subnetwork griffin-dev-wp
gsutil -m cp -r gs://cloud-training/gsp321/wp-k8s .
cd wp-k8s
gcloud iam service-accounts keys create key.json \
    --iam-account=cloud-sql-proxy@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com
kubectl create secret generic cloudsql-instance-credentials \
    --from-file key.json

kubectl create -f wp-env.yaml
kubectl create -f wp-deployment.yaml
kubectl create -f wp-service.yaml

